# SYNTAX ERROR
| test
echo > <
echo | |
<

syntax error: unclosed quote? > bash goes to interactive mode. what are we supposed to do?

##### CD ####

cd
cd .
cd ..
cd ".."
cd //
cd -
cd - > minishell: cd: -: No such file or directory? bash works with this?
cd "include"
cd """include""""
cd 'include'
cd "'include'" > ERROR if directory name 'include' = no such a file.
cd [absolute path]
cd [realtive path]
cd [directory] asdasfdsgds asdsad > only goes to the first directory
cd '/etc'
cd $OLDPWD
cd $VAR
cd nonexistingdirectory > ERROR

mkdir test_dir ; cd test_dir ; rm -rf ../test_dir ; cd . ; pwd ; cd . ; pwd ; cd .. ; pwd

##############

##### ENV ####

env

# no options for minishell so:
env -u USER > should give error i.e. env: -u: too many arguments

##############

##### EXPORT ####

export
export x=y y=z
export TEST=
export TES=T="" > I save it with quotes > change it!
export TEST='' > I save it with quotes > change it!
export asf=adf=fasf > echo $asf returns adf=fasf / echo $asf=adf returns adf=fasf=adf
export _TEST=100 > proper variable name!
export ___TEST=100 > proper variable name!
export TE+S=T=100 > ERROR (not a proper variable name)
export 1TESTT=100 > ERROR (not a proper variable name)
export TES.T=100 > ERROR (not a proper variable name)
export ""="" > ERROR
export ''='' > ERROR
export "="="=" > ERROR
export '='='=' > ERROR
export ========== > ERROR
export TES=T=""

# update existing key
I dont know how to check this with single command!

# no options for minishell so:
export -u > ERROR
export -revfs -abcd x=y > still ERROR

#keys without values
RIGHT NOW > SEG FAULT
export export

# w/PIPE
export | grep "SHLVL"
export | grep "OLDPWD"
export | grep "PWD"

##############

##### UNSET ####

1) export x=y xc=u
2) unset x
3) it should not unset xc as well!

unset doesntexists
unset VAR + echo $VAR
unset PATH + ls > should err but not ours! (-bash: ls: No such file or directory)
unset x xc > multiple vars should work
unset 1TEST > not a valid identifier (var name)
unset TEST=100 > not a valid identifier (= sign)
unset TEST c=10 TEST1 > removes the valid ones and gives error on invalid name

# no options for minishell so:
unset -u > ERROR

##############

##### ECHO ####

echo > displays a new line
echo "bonjour"
echo bonjour
echo 'bonjour'
echo test tout
echo test      tout
echo -n test tout
echo -n -n -n test tout
echo -ne irem > ?
echo -e > not necessarly error just display as anything with - = -e irem

eCho , eChO, eCHO, ECHO > case inspecific?
echo "bonjour"
echo bonjour
echo 'bonjour'
echo -n bonjour
echo -nn bonjour
echo -n -n -n bonjour
echo "-n" bonjour
echo -n"-n" bonjour
echo "-nnnn" bonjour
echo "-n -n -n"-n bonjour
echo "-n '-n'" bonjour



echo ~       ?
echo "~"     ?
echo '~'     ?
echo ~123
echo 123~
echo ~/123   ?
echo ~/123/456
echo $USER
echo "$USER"
echo "'$USER'"
echo " '$USER' "
echo text"$USER"
echo text"'$USER'" ' $USER '
echo "text"   "$USER"    "$USER"
echo '              $USER          '
echo               text "$USER"            "$USER"text
echo ''''''''''$USER''''''''''
echo """"""""$USER""""""""
echo $USER'$USER'text oui oui     oui  oui $USER oui      $USER ''
echo $USER '' $USER $USER '' $USER '' $USER -n $USER
echo ' \' ' \'
echo '\" ' " \"\""
echo \\\" \\\" \\\" \\\"\\\"\\\" \\\'\\\'\\\'
echo "$USER""$USER""$USER"
echo text"$USER"test
echo '$USER' "$USER" "text \' text"
echo '$USER'
echo $USER " "
echo "$USER""Users/$USER/file""'$USER'"'$USER'
echo "$USER$USER$USER"
echo '$USER'"$USER"'$USER'
echo '"$USER"''$USER'"""$USER"
echo " $USER  "'$PWD'
echo " $USER  \$ "'$PWD'
echo $USER=4
echo $USER=thallard
echo $USER
echo $?
echo $USER213
echo $USER$12USER$USER=4$USER12
echo $USER $123456789USER $USER123456789
echo $USER $9999USER $8888USER $7777USER
echo $USER $USER9999 $USER8888 $USER7777
echo $USER $USER9999 $USER8888 $USER7777 "$USER"
echo "$USER=12$USER"
echo "$9USER" "'$USER=12$SOMETHING'"
echo $PWD/file
echo "$PWD/file"
echo "text" "text$USER" ... "$USER"
echo $PWD; echo $OLDPWD; cd .; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ..; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ../..; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ../../..; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ../../../..; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ../../../../..; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ../../../../../..; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd /; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ''; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd '' ''; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd '' '' ''; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ' '; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd /; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd /.; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd /./; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd /././././; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd //; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ///; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ////; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd //////////////////////////////////////////////////////; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ' /'; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ' / '; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd '                  /'; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd '                  /              '; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ' // '; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd //home; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd ' //home'; pwd; echo $PWD; echo $OLDPWD
echo $PWD; echo $OLDPWD; cd '     //home    '; pwd; echo $PWD; echo $OLDPWD

##############

##### EXIT ####

exit 42 42
exit -42 -24
exit 42
exit 42 53 68
exit 259
exit -12030
exit --1239312
exit ++++1203020103
exit +0
exit ++++++0
exit -----0
exit azerty
exit kewkwqke
exit a
exit z
exit "1"
exit "2"
exit "+102"
exit "1230"
exit "+++1230"
exit "1"23
exit "2"32"32"
exit "'42'"
exit '42'"42"42
exit +'42'"42"42
exit -'42'"42"42
exit 9223372036854775807
exit -9223372036854775808
exit -4
exit wrong
exit wrong_command
exit something
exit 1 ; echo if you see this message then your minishell have some troubles
exit -1 ; echo if you see this message then your minishell have some troubles
exit 42 ; echo if you see this message then your minishell have some troubles
exit 0 ; echo if you see this message then your minishell have some troubles
exit --000 ; echo if you see this message then your minishell have some troubles
exit +++++++000 ; echo if you see this message then your minishell have some troubles
exit ++++3193912939 ; echo if you see this message then your minishell have some troubles
exit ---31232103012 ; echo if you see this message then your minishell have some troubles
exit "something" ; echo if you see this message then your minishell have some troubles
exit q ; echo if you see this message then your minishell have some troubles
exit help ; echo if you see this message then your minishell have some troubles
exit export ; echo if you see this message then your minishell have some troubles
exit echo ; echo if you see this message then your minishell have some troubles
exit cd .. ; echo if you see this message then your minishell have some troubles
exit 0 0 ; echo if you see this message then your minishell have some troubles
exit something somethingv2 ; echo if you see this message then your minishell have some troubles
exit 42 42 42 42 42 ; echo if you see this message then your minishell have some troubles
exit echo something ; echo if you see this message then your minishell have some troubles
exit exit ; echo if you see this message then your minishell have some troubles

##############


##  EXPANSION ##

echo $VAR
echo ${VAR}
